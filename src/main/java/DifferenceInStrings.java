package main.java;

import java.util.HashMap;
import java.util.Map;

/*
You are given two strings s and t.
String t is generated by random shuffling string s and then add one more letter at a random position.
Return the letter that was added to t.

Example 1:
Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:
Input: s = "", t = "y"
Output: "y"

Constraints:
0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.
 */
public class DifferenceInStrings {
    public static void main(String[] args) {
        String s = "abcd";
        String t = "abcde";
        System.out.println(new DifferenceInStrings().findTheDifference(s,t));
    }

    // runtime 8ms
    public char myFindTheDifference(String s, String t) {
        Map<Character, Integer> map = new HashMap<>();
        for(char c: s.toCharArray()){
            map.put(c, map.getOrDefault(c, 0) + 1);
        }
        for(char ch: t.toCharArray()){
            if(!map.containsKey(ch))
                return ch;
            else {
                int count = map.get(ch) - 1;
                if(count == 0)
                    map.remove(ch);
                else
                    map.put(ch, count);
            }
        }
        return 0;
    }

    // online solution, runtime 4ms
    private int findStringSum(String s) {
        int sum = 0;
        // find sum of ASCII values of characters in the string
        for(int i=0;i<s.length();i++)
            sum += s.charAt(i);
        return sum;
    }

    public char findTheDifference(String s, String t) {
        // subtract s from t to get ASCII value of character added to t
        return (char) (findStringSum(t) - findStringSum(s));
    }
}
